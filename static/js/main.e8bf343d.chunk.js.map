{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","type","data-mdb-toggle","data-mdb-target","aria-controls","aria-expanded","aria-label","id","href","title","onClick","toggleMode","role","Textform","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","htmlFor","heading","style","backgroundColor","color","value","onChange","e","target","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","about","Alert","alert","class","word","lower","charAt","slice","Captialize","msg","App","setMode","body","_useState3","_useState4","setAlert","message","setTimeout","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.e8bf343d.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-sm navbar-${props.mode} bg-${props.mode}`}>\r\n      {/* <!-- Container wrapper --> */}\r\n      <div className=\"container-fluid\">\r\n        {/* <!-- Toggle button --> */}\r\n        <button\r\n          className=\"navbar-toggler\" type=\"button\" data-mdb-toggle=\"collapse\" data-mdb-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" >\r\n          <i className=\"fas fa-bars\"></i>\r\n        </button>\r\n\r\n        {/* <!-- Collapsible wrapper --> */}\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          {/* <!-- Navbar brand --> */}\r\n          {/* <Link className=\"navbar-brand mt-2 mt-lg-0 fw-bold\" to=\"/\">{props.title}</Link> */}\r\n          <a className=\"navbar-brand mt-2 mt-lg-0 fw-bold\" href=\"#\">{props.title}</a>\r\n          {/* <!-- Left links --> */}\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link active\" to=\"/\">Home</Link> */}\r\n              <a className=\"nav-link active\" href=\"#\">Home</a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">{props.about}</Link>\r\n            </li> */}\r\n          </ul>\r\n          {/* <!-- Left links --> */}\r\n        </div>\r\n\r\n      </div>\r\n\r\n      {/* <form className=\"d-flex input-group w-auto mr-4\">\r\n        <input\r\n          type=\"search\" className=\"form-control rounded\" placeholder=\"Search\" aria-label=\"Search\"\r\n          aria-describedby=\"search-addon\"\r\n        />\r\n        <span className=\"input-group-text border-0\" id=\"search-addon\">\r\n          <i className=\"fas fa-search\"></i>\r\n        </span>\r\n      </form> */}\r\n      <div className={`form-check form-switch text-${props.mode === \"light\" ? \"dark\" : \"light\"}`}>\r\n        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n        <p className='fw-bold'>Enable DarkMode</p>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  about: PropTypes.string.isRequired\r\n}\r\nNavbar.defaultProps = {\r\n  title: \"set title here\",\r\n  about: \"About\"\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nexport default function Textform(props) {\r\n\r\n    const clearOnClick = () => {\r\n        let newText = \"\";\r\n        setText(newText);\r\n        props.showAlert(\"Cleared\", \"success\");\r\n    }\r\n    const handleUpClick = () => {\r\n        // console.log(\"Uppercase was Clicked\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Uppercase\", \"success\");\r\n    }\r\n    const handleLoClick = () => {\r\n        // console.log(\"Uppercase was Clicked\" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Lowercase\", \"success\");\r\n    }\r\n\r\n    const handleOnChange = (e) => {\r\n        // console.log(\"On Change\");\r\n        setText(e.target.value);\r\n    }\r\n\r\n    const copyText = () => {\r\n        // console.log(\"I am copy\");\r\n        let text = document.getElementById(\"exampleFormControlTextarea1\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Text Copied To Clipboard\", \"success\");\r\n    }\r\n\r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra Space Cleared\", \"success\");\r\n    }\r\n    const [text, setText] = useState(\"\");\r\n    return (\r\n        <>\r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"exampleFormControlTextarea1\" className={`form-label fw-bold text-${props.mode === \"light\" ? \"black\" : \"white\"} `}>{props.heading}</label>\r\n                <textarea className={`form-control`} style={{ backgroundColor: props.mode === \"light\" ? \"white\" : \"#504545\", color: props.mode === \"light\" ? \"black\" : \"white\" }} value={text} onChange={handleOnChange} id=\"exampleFormControlTextarea1\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-danger\" onClick={handleUpClick}>lowercase to uppercase</button>\r\n            <button className=\"btn btn-success\" onClick={handleLoClick}>uppercase to lowercase</button>\r\n            <button className=\"btn btn-warning\" onClick={clearOnClick}>clear</button>\r\n            <button className=\"btn btn-dark\" onClick={copyText}>Copy Text</button>\r\n            <button className=\"btn btn-secondary\" onClick={handleExtraSpaces}>Remove Extra Space</button>\r\n\r\n            <div className={`container my-3 text-${props.mode === \"light\" ? \"black\" : \"white\"}`}>\r\n                <h1>Your Text Summary</h1>\r\n                <p>{text.split(\" \").length - 1} words and {text.length} characters</p>\r\n                <p>{.008 * (text.split(\" \").length - 1)} minutes to read</p>\r\n                <h2>Preview</h2>\r\n\r\n                <p>{text.length > 1 ? text : \"write something to preview\"}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const Captialize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n    return (\r\n\r\n        props.alert && <div class=\"alert alert-primary\" role=\"alert\">\r\n            <strong>{Captialize(props.alert.type)}</strong> : {props.alert.msg}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Alert\r\n\r\n","import './App.css';\nimport Navbar from './components/Navbar';\n// import About from './components/About';\nimport Textform from './components/Textform';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n// import { BrowserRouter as Router, Route, Routes, Link } from \"react-router-dom\";\n\n\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const body = document.body;\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      body.style.backgroundColor = \"#1c289a\";\n      showAlert(\"Dark Mode Enabled\", \"success\");\n      document.title = \"Home-Dark Mode\";\n\n      // setInterval(() => {\n      //   document.title = \"Dark Mode is Amazing\";\n      // }, 500);\n\n      // setInterval(() => {\n      //   document.title = \"Download it Now\";\n      // }, 1000);\n    }\n    else {\n      setMode(\"light\");\n      body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode Enabled\", \"success\");\n      document.title = \"Home-Light Mode\";\n    }\n  }\n\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  return (\n    <>\n      {/* <Router>\n        <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container mt-3\">\n          <Routes>\n            <Route exact path=\"/about\" element={<About />}> </Route>\n            <Route exact path=\"/\" element={<Textform showAlert={showAlert} heading=\"Enter your text to Analyse below\" mode={mode} />}></Route>\n          </Routes>\n        </div>\n      </Router> */}\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container mt-3\">\n        <Textform showAlert={showAlert} heading=\"Enter your text to Analyse below\" mode={mode} />\n      </div>\n    </>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}