{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","type","data-mdb-toggle","data-mdb-target","aria-controls","aria-expanded","aria-label","href","title","id","onClick","toggleMode","role","Textform","_useState","useState","_useState2","Object","slicedToArray","text","setText","htmlFor","heading","style","backgroundColor","color","value","onChange","e","target","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","split","join","filter","defaultProps","about","Alert","height","alert","class","word","lower","charAt","slice","Captialize","msg","App","setMode","body","_useState3","_useState4","setAlert","message","setTimeout","Fragment","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.b6c3a212.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-sm navbar-${props.mode} bg-${props.mode}`}>\r\n      {/* <!-- Container wrapper --> */}\r\n      <div className=\"container-fluid\">\r\n        {/* <!-- Toggle button --> */}\r\n        <button\r\n          className=\"navbar-toggler\" type=\"button\" data-mdb-toggle=\"collapse\" data-mdb-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" >\r\n          <i className=\"fas fa-bars\"></i>\r\n        </button>\r\n\r\n        {/* <Link className=\"navbar-brand mt-2 mt-lg-0 fw-bold\" to=\"#\">{props.title}</Link> */}\r\n        <a className=\"navbar-brand mt-2 mt-lg-0 fw-bold\" href=\"#\">{props.title}</a>\r\n        {/* <!-- Collapsible wrapper --> */}\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          {/* <!-- Navbar brand --> */}\r\n          {/* <Link className=\"navbar-brand mt-2 mt-lg-0 fw-bold\" to=\"/\">{props.title}</Link> */}\r\n\r\n          {/* <!-- Left links --> */}\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link active\" to=\"/\">Home</Link> */}\r\n              <a className=\"nav-link active\" href=\"#\">Home</a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">{props.about}</Link>\r\n            </li> */}\r\n          </ul>\r\n          {/* <!-- Left links --> */}\r\n          <div className={`form-check form-switch text-${props.mode === \"light\" ? \"dark\" : \"light\"}`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n            <p className='fw-bold'>Enable DarkMode</p>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      {/* <form className=\"d-flex input-group w-auto mr-4\">\r\n        <input\r\n          type=\"search\" className=\"form-control rounded\" placeholder=\"Search\" aria-label=\"Search\"\r\n          aria-describedby=\"search-addon\"\r\n        />\r\n        <span className=\"input-group-text border-0\" id=\"search-addon\">\r\n          <i className=\"fas fa-search\"></i>\r\n        </span>\r\n      </form> */}\r\n\r\n    </nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  about: PropTypes.string.isRequired\r\n}\r\nNavbar.defaultProps = {\r\n  title: \"set title here\",\r\n  about: \"About\"\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nexport default function Textform(props) {\r\n\r\n    const clearOnClick = () => {\r\n        let newText = \"\";\r\n        setText(newText);\r\n        props.showAlert(\"Cleared\", \"success\");\r\n    }\r\n    const handleUpClick = () => {\r\n        // console.log(\"Uppercase was Clicked\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Uppercase\", \"success\");\r\n    }\r\n    const handleLoClick = () => {\r\n        // console.log(\"Uppercase was Clicked\" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Lowercase\", \"success\");\r\n    }\r\n\r\n    const handleOnChange = (e) => {\r\n        // console.log(\"On Change\");\r\n        setText(e.target.value);\r\n    }\r\n\r\n    const copyText = () => {\r\n        // console.log(\"I am copy\");\r\n        let text = document.getElementById(\"exampleFormControlTextarea1\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        document.getSelection().removeAllRanges();\r\n        props.showAlert(\"Text Copied To Clipboard\", \"success\");\r\n    }\r\n\r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra Space Cleared\", \"success\");\r\n    }\r\n    const [text, setText] = useState(\"\");\r\n    return (\r\n        <main>\r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"exampleFormControlTextarea1\" className={`form-label fw-bold text-${props.mode === \"light\" ? \"black\" : \"white\"} `}>{props.heading}</label>\r\n                <textarea className={`form-control`} style={{ backgroundColor: props.mode === \"light\" ? \"white\" : \"#504545\", color: props.mode === \"light\" ? \"black\" : \"white\" }} value={text} onChange={handleOnChange} id=\"exampleFormControlTextarea1\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button disabled={text.length === 0} className=\"btn btn-danger\" onClick={handleUpClick}>lowercase to uppercase</button>\r\n            <button disabled={text.length === 0} className=\"btn btn-success\" onClick={handleLoClick}>uppercase to lowercase</button>\r\n            <button disabled={text.length === 0} className=\"btn btn-warning\" onClick={clearOnClick}>clear</button>\r\n            <button disabled={text.length === 0} className=\"btn btn-dark\" onClick={copyText}>Copy Text</button>\r\n            <button disabled={text.length === 0} className=\"btn btn-secondary\" onClick={handleExtraSpaces}>Remove Extra Space</button>\r\n\r\n            <div className={`container my-3 text-${props.mode === \"light\" ? \"black\" : \"white\"}`}>\r\n                <h1>Your Text Summary</h1>\r\n                <p>{text.split(\" \").filter((e) => { return e.length !== 0 }).length} words and {text.length} characters</p>\r\n                <p>{.008 * (text.split(\" \").filter((e) => { return e.length !== 0 }).length)} minutes to read</p>\r\n                <h2>Preview</h2>\r\n\r\n                <p>{text.length > 1 ? text : \"write something to preview\"}</p>\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const Captialize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n    return (\r\n        <div style={{ height: '50px' }}>\r\n            {props.alert && <div class=\"alert alert-primary\" role=\"alert\">\r\n                <strong>{Captialize(props.alert.type)}</strong> : {props.alert.msg}\r\n            </div>}\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Alert\r\n\r\n","import './App.css';\nimport Navbar from './components/Navbar';\n// import About from './components/About';\nimport Textform from './components/Textform';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n// import { BrowserRouter as Router, Route, Routes, Link } from \"react-router-dom\";\n\n\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const body = document.body;\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      body.style.backgroundColor = \"#1c289a\";\n      showAlert(\"Dark Mode Enabled\", \"success\");\n      document.title = \"Home-Dark Mode\";\n\n      // setInterval(() => {\n      //   document.title = \"Dark Mode is Amazing\";\n      // }, 500);\n\n      // setInterval(() => {\n      //   document.title = \"Download it Now\";\n      // }, 1000);\n    }\n    else {\n      setMode(\"light\");\n      body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode Enabled\", \"success\");\n      document.title = \"Home-Light Mode\";\n    }\n  }\n\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  return (\n    <>\n      {/* <Router>\n        <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container mt-3\">\n          <Routes>\n            <Route exact path=\"/about\" element={<About />}> </Route>\n            <Route exact path=\"/\" element={<Textform showAlert={showAlert} heading=\"Enter your text to Analyse below\" mode={mode} />}></Route>\n          </Routes>\n        </div>\n      </Router> */}\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container mt-3\">\n        <Textform showAlert={showAlert} heading=\"Enter your text to Analyse below\" mode={mode} />\n      </div>\n    </>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}